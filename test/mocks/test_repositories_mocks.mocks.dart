// Mocks generated by Mockito 5.2.0 from annotations
// in foursys_test/test/mocks/test_repositories_mocks.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:dio/dio.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

import 'test_repositories_mocks.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [HttpClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i2.HttpClient {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<dynamic> get(String? url,
          {Map<String, dynamic>? queryParameters, _i4.Options? options}) =>
      (super.noSuchMethod(
          Invocation.method(#get, [url],
              {#queryParameters: queryParameters, #options: options}),
          returnValue: Future<dynamic>.value()) as _i3.Future<dynamic>);
  @override
  _i3.Future<dynamic> post(String? url, {dynamic data, _i4.Options? options}) =>
      (super.noSuchMethod(
          Invocation.method(#post, [url], {#data: data, #options: options}),
          returnValue: Future<dynamic>.value()) as _i3.Future<dynamic>);
  @override
  _i3.Future<dynamic> put(String? url, {dynamic data, _i4.Options? options}) =>
      (super.noSuchMethod(
          Invocation.method(#put, [url], {#data: data, #options: options}),
          returnValue: Future<dynamic>.value()) as _i3.Future<dynamic>);
  @override
  _i3.Future<dynamic> delete(String? url,
          {dynamic data, _i4.Options? options}) =>
      (super.noSuchMethod(
          Invocation.method(#delete, [url], {#data: data, #options: options}),
          returnValue: Future<dynamic>.value()) as _i3.Future<dynamic>);
}
